# CirrusCI - test builds on FreeBSD instances
# See: https://cirrus-ci.org; https://cirrus-ci.org/guide/FreeBSD/

ci_freebsd_task:

  freebsd_instance:
    # See the list of available FreeBSD image families here: https://cirrus-ci.org/guide/FreeBSD/
    image_family: freebsd-14-1 # FreeBSD 14.1-RELEASE

  env:
    matrix:
      - CONFIGTYPE: Debug
      - CONFIGTYPE: Release
        RUN_TEST_262: true
      - CONFIGTYPE: examples
      - CONFIGTYPE: shared

  name: ci / freebsd ($CONFIGTYPE)

  install_deps_script:
    - pkg update -f
    - pkg clean -a -y
    - pkg install -y git cmake ninja

  init_git_submodules_script: git submodule update --init --recursive

  set_build_env_script: |
    BUILD_DIR=build
    echo "BUILD_DIR=$BUILD_DIR" >> $CIRRUS_ENV;
    echo "RUN262=$BUILD_DIR/run-test262" >> $CIRRUS_ENV;
    BUILD_TYPE="Release"
    if [ "$CONFIGTYPE" = "Debug" ]; then
      BUILD_TYPE="Debug"
    elif [ "$CONFIGTYPE" = "Release" ]; then
      BUILD_TYPE="Release"
    elif [ "$CONFIGTYPE" = "examples" ]; then
      echo "QJS_BUILD_EXAMPLES=ON" >> $CIRRUS_ENV;
    elif [ "$CONFIGTYPE" = "shared" ]; then
      echo "BUILD_SHARED_LIBS=ON" >> $CIRRUS_ENV;
    elif [ "$CONFIGTYPE" = "asan+ubsan" ]; then
      BUILD_TYPE="RelWithDebInfo"
      echo "QJS_ENABLE_ASAN=ON" >> $CIRRUS_ENV;
      echo "QJS_ENABLE_UBSAN=ON" >> $CIRRUS_ENV;
    fi
    echo "BUILD_TYPE=$BUILD_TYPE" >> $CIRRUS_ENV;

  cmake_configure_script: cmake -B "${BUILD_DIR}" -DCMAKE_BUILD_TYPE=${BUILD_TYPE}

  build_script: |
    cmake --build "${BUILD_DIR}"

  test_script: |
    if [ "$CONFIGTYPE" != "examples" ]; then
      ${RUN262} -c tests.conf
    else
      echo "Skipped"
    fi

  test_examples_script: |
    if [ "$CONFIGTYPE" = "examples" ]; then
      cp build/fib.so examples/
      cp build/point.so examples/
      ./build/qjs examples/test_fib.js
      ./build/qjs examples/test_point.js
      ./build/qjs tests/test_bjson.js
      ./build/function_source
    else
      echo "Skipped"
    fi

  test_262_script: |
    if [ "$RUN_TEST_262" = "true" ]; then
      git submodule update --init --checkout --depth 1
      time ${RUN262} -m -c test262.conf -a
    else
      echo "Skipped"
    fi

  test_standalone_script: |
      ./build/qjs -c examples/hello.js -o hello
      ./hello

  test_interrupt_script: ./build/interrupt-test
